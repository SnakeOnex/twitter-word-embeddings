{"version":3,"sources":["components/word-search.js","components/embedding-table.js","components/app.js","components/router.js","index.js"],"names":["WordSearch","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","myInput","React","createRef","handleClick","e","preventDefault","parsed","state","inputValue","split","map","s","trim","join","fetch","then","response","json","responseJSON","props","getEmbs","JSON","parse","catch","error","console","log","_this2","react_default","a","createElement","className","onSubmit","type","value","onChange","updateInputValue","required","placeholder","setState","target","Component","EmbeddingTable","scope","embs","row","key","App","react_plotly_default","data","x","X","parseFloat","y","Y","mode","text","labels","textposition","marker","color","layout","xaxis","range","yaxis","width","height","title","rndr","words","length","word_search","embedding_table","getPlot","Router","BrowserRouter","Switch","Route","exact","path","component","render","router","document","querySelector"],"mappings":"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","file":"static/js/main.d8c62e9c.chunk.js","sourcesContent":["import React from 'react';\nimport Plot from 'react-plotly.js';\n\nclass WordSearch extends React.Component {\n\n  constructor() {\n\tsuper();\n\tthis.state = {\n\t  inputValue: \"\"\n\t};\n\n    //this.handleClick = this.handleClick.bind(this)\n  }\n\n  myInput = React.createRef();\n\n  handleClick = e => {\n\te.preventDefault();\n\tlet parsed = this.state.inputValue.split(',').map(s => s.trim()).join('+');\n\tfetch(\"http://194.182.80.90:5000/\" + parsed) // Call the fetch function passing the url of the API as a parameter\n\t.then((response) => response.json())\n\t.then((responseJSON) => {\n\t  this.props.getEmbs(JSON.parse(responseJSON));\n\t})\n\t.catch(function(error) {\n\t  console.log(error);\n\t});\n  }\n\n\n  render() {\n\treturn (\n\t  <form className=\"word-search form-group row\" onSubmit={this.handleClick} >\n\t\t<input \n\t\t  className=\"form-control col-sm-8\"\n\t\t  type=\"text\"\n\t\t  value={this.state.inputValue}\n\t\t  onChange={e => this.updateInputValue(e)}\n\t\t  required \n\t\t  placeholder=\"some word\"\n\t\t />\n\t\t<button type=\"submit\" className=\"btn btn-primary col-sm-4\">Find similar</button>\n\t  </form>\n\t);\n  }\n\n  updateInputValue(e) {\n\tthis.setState({\n\t  inputValue: e.target.value\n\t});\n  }\n}\n\nexport default WordSearch;\n","import React from \"react\";\n\nclass EmbeddingTable extends React.Component {\n  \n  render() {\n\tconsole.log(this.props);\n\n\treturn (\n\t<table className=\"embedding-table table col-sm-5\">\n\t  <thead>\n\t\t<tr>\n\t\t  <th scope=\"col\">Word</th>\n\t\t  <th scope=\"col\">Similarity</th>\n\t\t</tr>\n\t  </thead>\n\t  <tbody>\n\t\t  {this.props.embs.map((row) => {\n\t\t\treturn (\n\t\t\t  <tr key={row[0]}>\n\t\t\t\t<td> {row[0]} </td> \n\t\t\t\t<td> {row[1]} </td> \n\t\t\t  </tr>\n\t\t\t);\n\t\t  }\n\t\t  )}\n\t  </tbody>\n\t</table>\n\t)\n  }\n}\nexport default EmbeddingTable;\n","import React from \"react\";\nimport WordSearch from \"./word-search\";\nimport EmbeddingTable from \"./embedding-table\";\nimport Plot from \"react-plotly.js\";\n\nclass App extends React.Component {\n  state = {\n\tembs: {}\n  }\n\n  getEmbs = embs => {\n\tthis.setState({\n\t  embs: embs,\n\t});\n  }\n\n  getPlot() {\n\treturn (\n\t\t<Plot\n        data={[\n          {\n\t\t\tx: this.state.embs.X.map(x => { return parseFloat(x)}),\n\t\t\ty: this.state.embs.Y.map(y => { return parseFloat(y)}),\n            type: 'scatter',\n\t\t\tmode: 'markers+text',\n\t\t\ttext: this.state.embs.labels,\n\t\t\ttextposition: 'bottom-center',\n            marker: {color: 'red'},\n          },\n        ]}\n        layout={{xaxis: { range: [-50, 50]}, yaxis: { range: [-50, 50]}, width: 640, height: 480, title: 'Plotted words'} }\n      />\n\t);\n  }\n\n  render() {\n\tlet rndr = \"nothing\";\n\tif (this.state.embs.words != null) {\n\t  rndr = \"similar\";\n\t  if (this.state.embs.X.length > 1)\n\t\trndr = \"plot\";\n\t}\n\treturn (\n\t  <div className=\"container\">\n\t\t<h2>Enter a word</h2>\n\t\t<div className=\"row word-search-wrapper\">\n\t\t  <WordSearch getEmbs={this.getEmbs} />\n\t\t</div>\n\t\t<div className=\"row\">\n\t\t  {rndr == \"similar\" || rndr == \"plot\" ? <EmbeddingTable embs={this.state.embs.words} /> : null }\n\t\t</div>\n\t\t{rndr == \"plot\" ? this.getPlot() : null}\n\t  </div>\n\t);\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport App from \"./app.js\";\n\nconst Router = () => (\n  <BrowserRouter>\n\t<Switch>\n\t  <Route exact path=\"/\" component={App} />\n\t  <Route component={App} />\n\t</Switch>\n  </BrowserRouter>\n)\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from \"./components/router.js\";\n\n\nrender(<Router/>, document.querySelector('#main'));\n"],"sourceRoot":""}